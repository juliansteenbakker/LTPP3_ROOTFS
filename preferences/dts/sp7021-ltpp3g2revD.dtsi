/dts-v1/;

#include "sp7021-common.dtsi"

/ {
	model = "SP7021 LTPP3G2 Rev. D";

	chosen {
		bootargs = "console=ttyS0,115200 root=/dev/ram rw loglevel=8 earlyprintk";
		stdout-path = "serial0:115200n8";
	};
	memory {
		reg = <0x00000000 0x20000000>; /* 512MB */
	};
};

&rtc {  charging-mode = <0x0E>;  };

&sp_spinor0 {  status = "disabled";  };

&spi_controller0 {
pinctrl-names = "default";
	pinctrl-0 = <&spim0_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;		
		status = "okay";
	};
};

&spi_controller1 {
	pinctrl-names = "default";
	pinctrl-0 = <&spim1_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;
		status = "okay";
	};
};

&spi_controller2 {
	pinctrl-names = "default";
	pinctrl-0 = <&spim2_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;		
		status = "okay";
	};
};

&spi_controller3 {
	pinctrl-names = "default";
	pinctrl-0 = <&spim3_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	spi@0{    
		compatible = "rohm,dh2228fv";	
		reg = <0x0>;
		spi-max-frequency = <50000000>;		
		status = "okay";
	};
};


&sdio {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_sdio &pins_sdio_reset>;
 bus-width = <4>;
 max-frequency = <40000000>; /* up to 52 */
 // this: enable
 status = "okay";
 brcmf1: bcrmf@1 {
   reg = <1>;
   compatible = "android,bcmdhd_wlan";
   reset-gpios = <&pctl 83 GPIO_ACTIVE_LOW>;
 };
};

&sp_uphy0 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_vbus_usb0>;
 vbus-gpio = <&pctl 90 GPIO_ACTIVE_HIGH>;
};

&sp_uphy1 {
  pinctrl-names = "default";
  pinctrl-0 = <&pins_vbus_usb1>;
  vbus-gpio = <&pctl 91 GPIO_ACTIVE_HIGH>;
};

&l2sw {
 pinctrl-names = "default";
 pinctrl-0 = <&ethA_pins &eth0_pins &eth1_pins>;
};

&mmc0 {
 pinctrl-names = "default";
 pinctrl-0 = <&emmc_mux>;
};

&mmc1 {
 pinctrl-names = "default";
 pinctrl-0 = <&mmc1_mux>;
 cd-gpios = <&pctl 0 GPIO_ACTIVE_LOW>;
};

&hdmitx {
 pinctrl-names = "default";
 pinctrl-0 = <&hdmi_A_tx1>;
};

&uart1 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_uart1>;
 status = "okay";
 // this: enable, pins_uart1
};

&uart2 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_uart2>;
 status = "disabled";
 // this: enable, pins_uart2
};

&uart3 {
 pinctrl-names = "default";
 pinctrl-0 = <&pins_uart3>;
 status = "disabled";
 // this: enable, pins_uart3
};

&uart4 {
 pinctrl-names = "default";
 /* pinctrl-0 = <&pins_uart4>; */
 pinctrl-0 = <&pins_btuart &pins_bt_reset>;
 status = "okay";
 // this: enable (bt) | enable (uart4), pins_uart4
};

&i2cm0 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm0_pins>;
	status = "okay";
};

&i2cm1 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm1_pins>;
	status = "okay";
};

&i2cm2 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm2_pins>;
	status = "okay";
};

&i2cm3 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&i2cm3_pins>;
	status = "okay";
};

&sp_display {
	ui_width = <1280>;
	ui_height = <720>;
	ui_format = <0x8>;
		/* 0x2 = 8bpp (ARGB)
		 * 0x4 = YUY2
		 * 0x8 = RGB565
		 * 0x9 = ARGB1555
		 * 0xa = RGBA4444
		 * 0xb = ARGB4444
		 * 0xd = RGBA8888
		  0xe = ARGB8888 */
};

&pwm {
	pinctrl-names = "default";
	pinctrl-0 = <&buzzer0_pins>;
	status = "okay";
};

&pctl {
 /*** all non-device binded that you want to set mode ***/
 pinctrl-names = "default";
 pinctrl-0 = <&pins_iopp_nobinded &pins_gpio_nobinded &func_zero>;

 /* detouch any preset pins from this functions */
 func_zero: func_zero {
   sppctl,zero_func = <
     MUXF_L2SW_LED_FLASH0
     MUXF_L2SW_LED_ON0
     MUXF_L2SW_LED_FLASH1
     MUXF_L2SW_LED_ON1
     MUXF_L2SW_P0_MAC_RMII_RXER
     MUXF_L2SW_P1_MAC_RMII_RXER
   >;
 };
 
 pins_iopp_nobinded: pins_iopp_nobinded {
    sppctl,pins = <
    /* SPPCTL_IOPAD(97,SPPCTL_PCTL_G_IOPP,0,0) */
    >;
 };
 pins_gpio_nobinded: pins_gpio_nobinded {
    sppctl,pins = <
      SPPCTL_IOPAD(42,SPPCTL_PCTL_G_GPIO,0,0)   /* was L2SW_LED_FLASH0 */
      /*SPPCTL_IOPAD(51,SPPCTL_PCTL_G_GPIO,0,0)*/   /* was L2SW_LED_ON0 */
      SPPCTL_IOPAD(30,SPPCTL_PCTL_G_GPIO,0,0)   /* was L2SW_LED_FLASH1 */
      SPPCTL_IOPAD(39,SPPCTL_PCTL_G_GPIO,0,0)   /* was L2SW_LED_ON1  */
    >;
 };

 pins_vbus_usb0: pins_vbus_usb0 {
	sppctl,pins = <
	  SPPCTL_IOPAD(90,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT)
	>;
 };
 pins_vbus_usb1: pins_vbus_usb1 {
    sppctl,pins = <
	  SPPCTL_IOPAD(91,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT)
	>;
 };

 leds_s0_def: user_leds_s0_def {
    sppctl,pins = <
      SPPCTL_IOPAD(6,SPPCTL_PCTL_G_GPIO,MUXF_GPIO,SPPCTL_PCTL_L_INV)
      SPPCTL_IOPAD(7,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_INV)
    >;
 };
 leds_s0_slp: user_leds_s0_slp {
    sppctl,pins = <
      SPPCTL_IOPAD(6,SPPCTL_PCTL_G_GPIO,0,0)
      SPPCTL_IOPAD(7,SPPCTL_PCTL_G_GPIO,0,0)
    >;
 };
 tpsleds_pins: user_tpsleds_pins {
    sppctl,pins = <
      SPPCTL_IOPAD(4,SPPCTL_PCTL_G_GPIO,0,0)
      SPPCTL_IOPAD(5,SPPCTL_PCTL_G_GPIO,0,0)
    >;
 };

 i2cm0_pins: i2cm0_pins {
    sppctl,pins = <>;};

 i2cm1_pins: i2cm1_pins {
    sppctl,pins = <>;
 };

 i2cm2_pins: i2cm2_pins {
    sppctl,pins = <>;
 }; 

 i2cm3_pins: i2cm3_pins {
    sppctl,pins = <>;
 }; 

 spim0_pins: spim0_pins {
    sppctl,pins = <>;
 };

 spim1_pins: spim1_pins {
    sppctl,pins = <>;
 };

 spim2_pins: spim2_pins {
    sppctl,pins = <>;
 };

 spim3_pins: spim3_pins {
    sppctl,pins = <>;
 };

 pins_uart1: pins_uart1 {
    sppctl,pins = <>;
 };

 pins_uart2: pins_uart2 {
    sppctl,pins = <>;
 };

 pins_uart3: pins_uart3 {
    sppctl,pins = <>;
 };

 pins_uart4: pins_uart4 {
    sppctl,pins = <>;
 };

 pins_btuart: pins_btuart {
    sppctl,pins = <
      SPPCTL_IOPAD(40,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RX,0)
      SPPCTL_IOPAD(41,SPPCTL_PCTL_G_PMUX,MUXF_UA4_TX,0)
      SPPCTL_IOPAD(56,SPPCTL_PCTL_G_PMUX,MUXF_UA4_RTS,SPPCTL_PCTL_L_ONV)
      SPPCTL_IOPAD(49,SPPCTL_PCTL_G_PMUX,MUXF_UA4_CTS,0)
    >;
 };
 pins_bt_reset: pins_bt_reset {
    sppctl,pins = <
      SPPCTL_IOPAD(82,SPPCTL_PCTL_G_GPIO,0,0)
    >;
 };
 buzzer0_pins: user_buzzer0_pins {
    sppctl,pins = <
      SPPCTL_IOPAD(48,SPPCTL_PCTL_G_PMUX,MUXF_PWM0,0)
    >;
 };
 pins_i2ctps: pins_i2ctps {
    sppctl,pins = <
      SPPCTL_IOPAD(1,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT|SPPCTL_PCTL_L_ONV|SPPCTL_PCTL_L_ODR)
      SPPCTL_IOPAD(2,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OUT|SPPCTL_PCTL_L_ONV|SPPCTL_PCTL_L_ODR)
    >;
 };
 hdmi_A_tx1: hdmi_A_tx1_pins {
    sppctl,groups = "HDMI_TX1";
    sppctl,function = "HDMI_TX";
 };
 /* for all eth */
 ethA_pins: pinmux_ethA_pins {
  sppctl,pins = <
       SPPCTL_IOPAD(63,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_CLK_OUT,0)
       SPPCTL_IOPAD(71,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDC,0)
       SPPCTL_IOPAD(64,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDIO,0)
  >;
 };
 eth0_pins: pinmux_eth0_pins {
  sppctl,pins = <
       SPPCTL_IOPAD(62,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXEN,0)
       SPPCTL_IOPAD(61,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD0,0)
       SPPCTL_IOPAD(60,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD1,0)
       SPPCTL_IOPAD(59,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_CRSDV,0)
       SPPCTL_IOPAD(58,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD0,0)
       SPPCTL_IOPAD(57,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD1,0)
  >;
 };
 eth1_pins: pinmux_eth1_pins {
  sppctl,pins = <
       SPPCTL_IOPAD(55,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXEN,0)
       SPPCTL_IOPAD(54,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXD0,0)
       SPPCTL_IOPAD(53,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_TXD1,0)
       SPPCTL_IOPAD(52,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_CRSDV,0)
       SPPCTL_IOPAD(51,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_RXD0,0)
       SPPCTL_IOPAD(50,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P1_MAC_RMII_RXD1,0)
  >;
 };

 mmc1_mux: mmc1_mux {
	sppctl,groups = "SD_CARD";
	sppctl,function = "SD_CARD";
	sppctl,pins = < SPPCTL_IOPAD(0,SPPCTL_PCTL_G_GPIO,0,0) >;
 };
 pins_sdio: pins_sdio {
	sppctl,pins = <
		SPPCTL_IOPAD(44,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D1,0)
		SPPCTL_IOPAD(45,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D0,0)
		SPPCTL_IOPAD(46,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_CLK,0)
		SPPCTL_IOPAD(47,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_CMD,0)
		SPPCTL_IOPAD(42,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D3,0)
		SPPCTL_IOPAD(43,SPPCTL_PCTL_G_PMUX,MUXF_SDIO_D2,0) >;
 };
 pins_sdio_reset: pins_sdio_reset {
	sppctl,pins = <
		/* additional reset pin for BRCM */
		SPPCTL_IOPAD(83,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_OU1)
	>;
 };

};

/ {
	soc@B {
		tpsid {
        	compatible = "tpsid";
		    nvmem-cell-names = "mac_addr0";
		    nvmem-cells = <&mac_addr0>;
		};
	};
};
